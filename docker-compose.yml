version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - chat-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - chat-network

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: ["bash", "-c", "/partition.sh"]
    volumes:
      - ./partition.sh:/partition.sh
    networks:
      - chat-network

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - chat-network

  chat-service-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-service-1
    ports:
      - "8080:8080"
    environment:
      - IS_DOCKER=true
      - PORT=8080
      - KAFKA_URL=kafka:9092
      - CHAT_GROUP_ID=chat-service
      - SERVER_ID=service-1
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_USERNAME=redis
      - REDIS_PASSWORD=redis
    depends_on:
      - kafka
      - redis
    networks:
      - chat-network

  chat-service-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-service-2
    ports:
      - "8081:8080"
    environment:
      - IS_DOCKER=true
      - PORT=8080
      - KAFKA_URL=kafka:9092
      - CHAT_GROUP_ID=chat-service
      - SERVER_ID=service-2
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_USERNAME=redis
      - REDIS_PASSWORD=redis
    depends_on:
      - kafka
        - redis
    networks:
      - chat-network

  chat-service-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-service-3
    ports:
      - "8082:8080"
    environment:
      - IS_DOCKER=true
      - PORT=8080
      - KAFKA_URL=kafka:9092
      - CHAT_GROUP_ID=chat-service
      - SERVER_ID=service-3
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_USERNAME=redis
      - REDIS_PASSWORD=redis
    depends_on:
      - kafka
      - redis
    networks:
      - chat-network
networks:
  chat-network:
    driver: bridge
